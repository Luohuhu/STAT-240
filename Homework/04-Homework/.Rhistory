select(airport, terminal, date, year, month, day, wday, everything()) %>%
select(-terminal) %>%
rename(passengers = all_total, flights = all_flights, booths = all_booths) %>%
arrange(date, hour)
rm(ord2016, ord2017, ord2018, ord2019, ord2020)
datas %>%
print(n = 20)
dim(datas)
temp = tibble(
date = seq(ymd("2016-01-01"), ymd("2020-12-31"), 1)
)
datas %>%
select(airport, date) %>%
distinct() %>%
full_join(temp) %>%
filter(is.na(airport))
tol = datas %>%
group_by(year, month) %>%
summarize(passengers = sum(passengers))
ggplot(tol, aes(x = month, y = passengers, fill = year)) +
geom_col() +
facet_wrap( ~ year) +
scale_y_continuous(labels = label_comma()) +
xlab("Month") +
ylab("Number of international arrivals") +
ggtitle("Monthly International Arrivals", subtitle = "2016 - 2020") +
guides(fill = guide_legend(title = "Year", title.position = "left")) +
theme(legend.position="bottom")
tab = datas %>%
group_by(year, wday) %>%
summarize(passengers = mean(passengers))
tab
ggplot(tab, aes(x = wday, y = passengers, fill = year)) +
geom_col() +
facet_wrap( ~ year) +
xlab("Week Day") +
ylab("Number of international arrivals") +
ggtitle("Daily International Arrivals", subtitle = "Sun - Sat") +
guides(fill = guide_legend(title = "Year", title.position = "left")) +
theme(legend.position="bottom")
datas  = datas %>%
mutate(
season = case_when(
month == "Apr"| month == "May" |month == "Mar" ~ 'Spring',
month == "Jul"| month =="Aug" | month =="Jun" ~ 'Summer',
month == "Sep"| month == "Oct" | month == "Nov" ~ 'Fall',
month == "Dec"| month == "Jan" | month == "Feb" ~ 'Winter',
TRUE                       ~ "other"
)
)
ggplot(datas, aes(x = non_us_avg_wait,y = us_avg_wait, color = season)) +
geom_point() +
geom_abline(intercept = 1, color = "red") +
geom_smooth(method = "lm") +
facet_wrap(~ year) +
ggtitle("Average waiting time comparison between US and Non-US passport holders by season") +
xlab("Average waiting time of US") +
ylab("Average waiting time of Non-US")
tab = datas %>%
group_by(year) %>%
filter(non_us_avg_wait > us_avg_wait) %>%
summarize(num_larger = n())
tab = datas %>%
group_by(year) %>%
filter(non_us_avg_wait > us_avg_wait) %>%
summarize(num_larger = n())
tab
tab_all = datas %>%
group_by(year) %>%
summarize(num_larger = n())
tab_larger = datas %>%
group_by(year) %>%
filter(non_us_avg_wait > us_avg_wait) %>%
summarize(num_larger = n())
tab = tab_all %>%
left_join(tab_large, by = "year")
tab_all = datas %>%
group_by(year) %>%
summarize(num_larger = n())
tab_larger = datas %>%
group_by(year) %>%
filter(non_us_avg_wait > us_avg_wait) %>%
summarize(num_larger = n())
tab = tab_all %>%
left_join(tab_larger, by = "year")
tab
tab_all = datas %>%
group_by(year) %>%
summarize(num_all = n())
tab_larger = datas %>%
group_by(year) %>%
filter(non_us_avg_wait > us_avg_wait) %>%
summarize(num_larger = n())
tab = tab_all %>%
left_join(tab_larger, by = "year")
tab
tab_all = datas %>%
group_by(year) %>%
summarize(num_all = n())
tab_larger = datas %>%
group_by(year) %>%
filter(non_us_avg_wait > us_avg_wait) %>%
summarize(num_larger = n())
tab = tab_all %>%
left_join(tab_larger, by = "year") %>%
mutate(frac = num_larger/num_all) %>%
select(-num_all, -num_larger)
tab
datas %>%
filter(non_us_avg_wait > us_avg_wait) %>%
ggplot(datas, aes(x = non_us_avg_wait,y = us_avg_wait, color = season)) +
geom_point() +
geom_abline(intercept = 1, color = "red") +
geom_smooth(method = "lm") +
facet_wrap(~ year) +
ggtitle("Average waiting time comparison between US and Non-US passport holders by season") +
xlab("Average waiting time of US") +
ylab("Average waiting time of Non-US")
datas %>%
filter(non_us_avg_wait > us_avg_wait) %>%
ggplot(aes(x = non_us_avg_wait,y = us_avg_wait, color = season)) +
geom_point() +
geom_abline(intercept = 1, color = "red") +
geom_smooth(method = "lm") +
facet_wrap(~ year) +
ggtitle("Average waiting time comparison between US and Non-US passport holders by season") +
xlab("Average waiting time of US") +
ylab("Average waiting time of Non-US")
datas %>%
filter(non_us_avg_wait > us_avg_wait) %>%
ggplot(aes(x = non_us_avg_wait,y = us_avg_wait, color = season)) +
geom_point() +
geom_abline(intercept = 1, color = "red") +
facet_wrap(~ year) +
ggtitle("Average waiting time comparison between US and Non-US passport holders by season") +
xlab("Average waiting time of US") +
ylab("Average waiting time of Non-US")
datas = datas %>%
mutate(booth_rate = (passengers*60)/(all_avg_wait*booths)) %>%
mutate(
time_of_day = case_when(
hour == '0100 - 0200' || hour == '0200 - 0300' || hour == '0300 - 0400' || hour == '0400 - 0500' ~ 'overnight',
hour == '0500 - 0600' || hour == '0600 - 0700' || hour == '0700 - 0800'  ~ 'oearly morning',
hour == '0800 - 0900' || hour == '0900 - 1000' || hour == '1000 - 1100' || hour == '1100 - 1200' ~ 'none',
hour == '1200 - 1300' || hour == '1300 - 1400' || hour == '1400 - 1500' || hour == '1500 - 1600' || hour == '1600 - 1700' ~ 'afternoon',
hour == '1700 - 1800' || hour == '1800 - 1900' || hour == '1900 - 2000'  ~ 'early evening',
hour == '2000 - 2100' || hour == '2100 - 2200' || hour == '2200 - 2300' || hour == '2300 - 0000' || hour == '0000 - 0100' ~ 'late evening',
TRUE                       ~ "other"
))
datas = datas %>%
mutate(booth_rate = (passengers*60)/(all_avg_wait*booths)) %>%
mutate(
time_of_day = case_when(
hour == '0100 - 0200' || hour == '0200 - 0300' || hour == '0300 - 0400' || hour == '0400 - 0500' ~ 'overnight',
hour == '0500 - 0600' || hour == '0600 - 0700' || hour == '0700 - 0800'  ~ 'oearly morning',
hour == '0800 - 0900' || hour == '0900 - 1000' || hour == '1000 - 1100' || hour == '1100 - 1200' ~ 'none',
hour == '1200 - 1300' || hour == '1300 - 1400' || hour == '1400 - 1500' || hour == '1500 - 1600' || hour == '1600 - 1700' ~ 'afternoon',
hour == '1700 - 1800' || hour == '1800 - 1900' || hour == '1900 - 2000'  ~ 'early evening',
hour == '2000 - 2100' || hour == '2100 - 2200' || hour == '2200 - 2300' || hour == '2300 - 0000' || hour == '0000 - 0100' ~ 'late evening',
TRUE                       ~ "other"
))
datas
datas = datas %>%
ungroup() %>%
mutate(booth_rate = (passengers*60)/(all_avg_wait*booths)) %>%
mutate(
time_of_day = case_when(
hour == '0100 - 0200' || hour == '0200 - 0300' || hour == '0300 - 0400' || hour == '0400 - 0500' ~ 'overnight',
hour == '0500 - 0600' || hour == '0600 - 0700' || hour == '0700 - 0800'  ~ 'early morning',
hour == '0800 - 0900' || hour == '0900 - 1000' || hour == '1000 - 1100' || hour == '1100 - 1200' ~ 'none',
hour == '1200 - 1300' || hour == '1300 - 1400' || hour == '1400 - 1500' || hour == '1500 - 1600' || hour == '1600 - 1700' ~ 'afternoon',
hour == '1700 - 1800' || hour == '1800 - 1900' || hour == '1900 - 2000'  ~ 'early evening',
hour == '2000 - 2100' || hour == '2100 - 2200' || hour == '2200 - 2300' || hour == '2300 - 0000' || hour == '0000 - 0100' ~ 'late evening',
TRUE                       ~ "other"
))
datas
tab_all = datas %>%
group_by(year) %>%
summarize(num_all = n())
tab_larger = datas %>%
group_by(year) %>%
filter(non_us_avg_wait > us_avg_wait) %>%
summarize(num_larger = n())
tab = tab_all %>%
left_join(tab_larger, by = "year") %>%
mutate(frac = num_larger/num_all)
tab
knitr::opts_chunk$set(echo = TRUE, message=FALSE, fig.height = 3)
library(tidyverse)
library(lubridate)
library(scales)
source("../../scripts/viridis.R")
ord2016 = read_csv("../../data/ORD-2016.csv")
ord2017 = read_csv("../../data/ORD-2017.csv")
ord2018 = read_csv("../../data/ORD-2018.csv")
ord2019 = read_csv("../../data/ORD-2019.csv")
ord2020 = read_csv("../../data/ORD-2020.csv")
datas = bind_rows(ord2016, ord2017, ord2018, ord2019, ord2020) %>%
mutate(year = year(date), month = month(date, label = TRUE),
day = day(date), wday = wday(date, label = TRUE)) %>%
select(airport, terminal, date, year, month, day, wday, everything()) %>%
select(-terminal) %>%
rename(passengers = all_total, flights = all_flights, booths = all_booths) %>%
arrange(date, hour)
rm(ord2016, ord2017, ord2018, ord2019, ord2020)
datas %>%
print(n = 20)
dim(datas)
temp = tibble(
date = seq(ymd("2016-01-01"), ymd("2020-12-31"), 1)
)
datas %>%
select(airport, date) %>%
distinct() %>%
full_join(temp) %>%
filter(is.na(airport))
tol = datas %>%
group_by(year, month) %>%
summarize(passengers = sum(passengers))
ggplot(tol, aes(x = month, y = passengers, fill = year)) +
geom_col() +
facet_wrap( ~ year) +
scale_y_continuous(labels = label_comma()) +
xlab("Month") +
ylab("Number of international arrivals") +
ggtitle("Monthly International Arrivals", subtitle = "2016 - 2020") +
guides(fill = guide_legend(title = "Year", title.position = "left")) +
theme(legend.position="bottom")
tab = datas %>%
group_by(year, wday) %>%
summarize(passengers = mean(passengers))
tab
ggplot(tab, aes(x = wday, y = passengers, fill = year)) +
geom_col() +
facet_wrap( ~ year) +
xlab("Week Day") +
ylab("Number of international arrivals") +
ggtitle("Daily International Arrivals", subtitle = "Sun - Sat") +
guides(fill = guide_legend(title = "Year", title.position = "left")) +
theme(legend.position="bottom")
datas  = datas %>%
mutate(
season = case_when(
month == "Apr"| month == "May" |month == "Mar" ~ 'Spring',
month == "Jul"| month =="Aug" | month =="Jun" ~ 'Summer',
month == "Sep"| month == "Oct" | month == "Nov" ~ 'Fall',
month == "Dec"| month == "Jan" | month == "Feb" ~ 'Winter',
TRUE                       ~ "other"
)
)
ggplot(datas, aes(x = non_us_avg_wait,y = us_avg_wait, color = season)) +
geom_point() +
geom_abline(intercept = 1, color = "red") +
geom_smooth(method = "lm") +
facet_wrap(~ year) +
ggtitle("Average waiting time comparison between US and Non-US passport holders by season") +
xlab("Average waiting time of Non-US") +
ylab("Average waiting time of US")
tab_all = datas %>%
group_by(year) %>%
summarize(num_all = n())
tab_larger = datas %>%
group_by(year) %>%
filter(non_us_avg_wait > us_avg_wait) %>%
summarize(num_larger = n())
tab = tab_all %>%
left_join(tab_larger, by = "year") %>%
mutate(frac = num_larger/num_all) %>%
select(-num_all, -num_larger)
tab
datas %>%
filter(non_us_avg_wait > us_avg_wait) %>%
ggplot(aes(x = non_us_avg_wait,y = us_avg_wait, color = season)) +
geom_point() +
geom_abline(intercept = 1, color = "red") +
facet_wrap(~ year) +
ggtitle("Average waiting time comparison between US and Non-US passport holders by season") +
xlab("Average waiting time of Non-US") +
ylab("Average waiting time of US")
datas = datas %>%
ungroup() %>%
mutate(booth_rate = (passengers*60)/(all_avg_wait*booths)) %>%
mutate(
time_of_day = case_when(
hour == "0100 - 0200" || hour == '0200 - 0300' || hour == '0300 - 0400' || hour == "0400 - 0500" ~ 'overnight',
hour == '0500 - 0600' || hour == '0600 - 0700' || hour == '0700 - 0800'  ~ 'early morning',
hour == '0800 - 0900' || hour == '0900 - 1000' || hour == '1000 - 1100' || hour == '1100 - 1200' ~ 'none',
hour == '1200 - 1300' || hour == '1300 - 1400' || hour == '1400 - 1500' || hour == '1500 - 1600' || hour == '1600 - 1700' ~ 'afternoon',
hour == '1700 - 1800' || hour == '1800 - 1900' || hour == '1900 - 2000'  ~ 'early evening',
hour == '2000 - 2100' || hour == '2100 - 2200' || hour == '2200 - 2300' || hour == '2300 - 0000' || hour == '0000 - 0100' ~ 'late evening',
TRUE                       ~ "other"
))
datas
datas = datas %>%
ungroup() %>%
mutate(booth_rate = (passengers*60)/(all_avg_wait*booths)) %>%
mutate(
time_of_day = case_when(
hour == "0100 - 0200" | hour == '0200 - 0300' | hour == '0300 - 0400' | hour == "0400 - 0500" ~ 'overnight',
hour == '0500 - 0600' | hour == '0600 - 0700' | hour == '0700 - 0800'  ~ 'early morning',
hour == '0800 - 0900' | hour == '0900 - 1000' | hour == '1000 - 1100' | hour == '1100 - 1200' ~ 'none',
hour == '1200 - 1300' | hour == '1300 - 1400' | hour == '1400 - 1500' | hour == '1500 - 1600' | hour == '1600 - 1700' ~ 'afternoon',
hour == '1700 - 1800' | hour == '1800 - 1900' | hour == '1900 - 2000'  ~ 'early evening',
hour == '2000 - 2100' | hour == '2100 - 2200' | hour == '2200 - 2300' | hour == '2300 - 0000' | hour == '0000 - 0100' ~ 'late evening',
TRUE                       ~ "other"
))
datas
?reorder()
datas = datas %>%
ungroup() %>%
mutate(booth_rate = (passengers*60)/(all_avg_wait*booths)) %>%
mutate(
time_of_day = case_when(
hour == "0100 - 0200" | hour == '0200 - 0300' | hour == '0300 - 0400' | hour == "0400 - 0500" ~ 'overnight',
hour == '0500 - 0600' | hour == '0600 - 0700' | hour == '0700 - 0800'  ~ 'early morning',
hour == '0800 - 0900' | hour == '0900 - 1000' | hour == '1000 - 1100' | hour == '1100 - 1200' ~ 'none',
hour == '1200 - 1300' | hour == '1300 - 1400' | hour == '1400 - 1500' | hour == '1500 - 1600' | hour == '1600 - 1700' ~ 'afternoon',
hour == '1700 - 1800' | hour == '1800 - 1900' | hour == '1900 - 2000'  ~ 'early evening',
hour == '2000 - 2100' | hour == '2100 - 2200' | hour == '2200 - 2300' | hour == '2300 - 0000' | hour == '0000 - 0100' ~ 'late evening',
TRUE                       ~ "other"
)) %>%
filter(passengers >= 200, all_avg_wait>0, booth_rate <= 500)
datas
datas = datas %>%
ungroup() %>%
mutate(booth_rate = (passengers*60)/(all_avg_wait*booths)) %>%
mutate(
time_of_day = case_when(
hour == "0100 - 0200" | hour == '0200 - 0300' | hour == '0300 - 0400' | hour == "0400 - 0500" ~ 'overnight',
hour == '0500 - 0600' | hour == '0600 - 0700' | hour == '0700 - 0800'  ~ 'early morning',
hour == '0800 - 0900' | hour == '0900 - 1000' | hour == '1000 - 1100' | hour == '1100 - 1200' ~ 'noon',
hour == '1200 - 1300' | hour == '1300 - 1400' | hour == '1400 - 1500' | hour == '1500 - 1600' | hour == '1600 - 1700' ~ 'afternoon',
hour == '1700 - 1800' | hour == '1800 - 1900' | hour == '1900 - 2000'  ~ 'early evening',
hour == '2000 - 2100' | hour == '2100 - 2200' | hour == '2200 - 2300' | hour == '2300 - 0000' | hour == '0000 - 0100' ~ 'late evening',
TRUE                       ~ "other"
)) %>%
mutate(time_of_day_index = case_when(
time_of_day == 'overnight' ~ 1,
time_of_day == 'early morning' ~ 2,
time_of_day == 'noon' ~ 3,
time_of_day == 'afternoon' ~ 4,
time_of_day == 'early evening' ~ 5,
time_of_day == 'late evening' ~ 6,
)) %>%
mutate( time_of_day = reorder(time_of_day, time_of_day_index)) %>%
filter(passengers >= 200, all_avg_wait>0, booth_rate <= 500)
datas
datas = datas %>%
ungroup() %>%
mutate(booth_rate = (passengers*60)/(all_avg_wait*booths)) %>%
mutate(
time_of_day = case_when(
hour == "0100 - 0200" | hour == '0200 - 0300' | hour == '0300 - 0400' | hour == "0400 - 0500" ~ 'overnight',
hour == '0500 - 0600' | hour == '0600 - 0700' | hour == '0700 - 0800'  ~ 'early morning',
hour == '0800 - 0900' | hour == '0900 - 1000' | hour == '1000 - 1100' | hour == '1100 - 1200' ~ 'noon',
hour == '1200 - 1300' | hour == '1300 - 1400' | hour == '1400 - 1500' | hour == '1500 - 1600' | hour == '1600 - 1700' ~ 'afternoon',
hour == '1700 - 1800' | hour == '1800 - 1900' | hour == '1900 - 2000'  ~ 'early evening',
hour == '2000 - 2100' | hour == '2100 - 2200' | hour == '2200 - 2300' | hour == '2300 - 0000' | hour == '0000 - 0100' ~ 'late evening',
TRUE                       ~ "other"
)) %>%
mutate(time_of_day_index = case_when(
time_of_day == 'overnight' ~ 1,
time_of_day == 'early morning' ~ 2,
time_of_day == 'noon' ~ 3,
time_of_day == 'afternoon' ~ 4,
time_of_day == 'early evening' ~ 5,
time_of_day == 'late evening' ~ 6,
)) %>%
mutate( time_of_day = reorder(time_of_day, time_of_day_index)) %>%
filter(passengers >= 200, all_avg_wait>0, booth_rate <= 500)
datas %>%
group_by(wday) %>%
ggplot(aes(x = wday, y = booth_rate, color = wday)) +
geom_boxplot() +
datas
datas = datas %>%
ungroup() %>%
mutate(booth_rate = (passengers*60)/(all_avg_wait*booths)) %>%
mutate(
time_of_day = case_when(
hour == "0100 - 0200" | hour == '0200 - 0300' | hour == '0300 - 0400' | hour == "0400 - 0500" ~ 'overnight',
hour == '0500 - 0600' | hour == '0600 - 0700' | hour == '0700 - 0800'  ~ 'early morning',
hour == '0800 - 0900' | hour == '0900 - 1000' | hour == '1000 - 1100' | hour == '1100 - 1200' ~ 'noon',
hour == '1200 - 1300' | hour == '1300 - 1400' | hour == '1400 - 1500' | hour == '1500 - 1600' | hour == '1600 - 1700' ~ 'afternoon',
hour == '1700 - 1800' | hour == '1800 - 1900' | hour == '1900 - 2000'  ~ 'early evening',
hour == '2000 - 2100' | hour == '2100 - 2200' | hour == '2200 - 2300' | hour == '2300 - 0000' | hour == '0000 - 0100' ~ 'late evening',
TRUE                       ~ "other"
)) %>%
mutate(time_of_day_index = case_when(
time_of_day == 'overnight' ~ 1,
time_of_day == 'early morning' ~ 2,
time_of_day == 'noon' ~ 3,
time_of_day == 'afternoon' ~ 4,
time_of_day == 'early evening' ~ 5,
time_of_day == 'late evening' ~ 6,
)) %>%
mutate( time_of_day = reorder(time_of_day, time_of_day_index)) %>%
filter(passengers >= 200, all_avg_wait>0, booth_rate <= 500)
datas %>%
group_by(wday) %>%
ggplot(aes(x = wday, y = booth_rate, color = wday)) +
geom_boxplot()
datas
datas = datas %>%
ungroup() %>%
mutate(booth_rate = (passengers*60)/(all_avg_wait*booths)) %>%
mutate(
time_of_day = case_when(
hour == "0100 - 0200" | hour == '0200 - 0300' | hour == '0300 - 0400' | hour == "0400 - 0500" ~ 'overnight',
hour == '0500 - 0600' | hour == '0600 - 0700' | hour == '0700 - 0800'  ~ 'early morning',
hour == '0800 - 0900' | hour == '0900 - 1000' | hour == '1000 - 1100' | hour == '1100 - 1200' ~ 'noon',
hour == '1200 - 1300' | hour == '1300 - 1400' | hour == '1400 - 1500' | hour == '1500 - 1600' | hour == '1600 - 1700' ~ 'afternoon',
hour == '1700 - 1800' | hour == '1800 - 1900' | hour == '1900 - 2000'  ~ 'early evening',
hour == '2000 - 2100' | hour == '2100 - 2200' | hour == '2200 - 2300' | hour == '2300 - 0000' | hour == '0000 - 0100' ~ 'late evening',
TRUE                       ~ "other"
)) %>%
mutate(time_of_day_index = case_when(
time_of_day == 'overnight' ~ 1,
time_of_day == 'early morning' ~ 2,
time_of_day == 'noon' ~ 3,
time_of_day == 'afternoon' ~ 4,
time_of_day == 'early evening' ~ 5,
time_of_day == 'late evening' ~ 6,
)) %>%
mutate( time_of_day = reorder(time_of_day, time_of_day_index)) %>%
filter(passengers >= 200, all_avg_wait>0, booth_rate <= 500)
datas %>%
group_by(wday) %>%
ggplot(aes(x = wday, y = booth_rate, color = wday)) +
geom_boxplot() +
facet_wrap(`time_of_day)
datas
datas = datas %>%
ungroup() %>%
mutate(booth_rate = (passengers*60)/(all_avg_wait*booths)) %>%
mutate(
time_of_day = case_when(
hour == "0100 - 0200" | hour == '0200 - 0300' | hour == '0300 - 0400' | hour == "0400 - 0500" ~ 'overnight',
hour == '0500 - 0600' | hour == '0600 - 0700' | hour == '0700 - 0800'  ~ 'early morning',
hour == '0800 - 0900' | hour == '0900 - 1000' | hour == '1000 - 1100' | hour == '1100 - 1200' ~ 'noon',
hour == '1200 - 1300' | hour == '1300 - 1400' | hour == '1400 - 1500' | hour == '1500 - 1600' | hour == '1600 - 1700' ~ 'afternoon',
hour == '1700 - 1800' | hour == '1800 - 1900' | hour == '1900 - 2000'  ~ 'early evening',
hour == '2000 - 2100' | hour == '2100 - 2200' | hour == '2200 - 2300' | hour == '2300 - 0000' | hour == '0000 - 0100' ~ 'late evening',
TRUE                       ~ "other"
)) %>%
mutate(time_of_day_index = case_when(
time_of_day == 'overnight' ~ 1,
time_of_day == 'early morning' ~ 2,
time_of_day == 'noon' ~ 3,
time_of_day == 'afternoon' ~ 4,
time_of_day == 'early evening' ~ 5,
time_of_day == 'late evening' ~ 6,
)) %>%
mutate( time_of_day = reorder(time_of_day, time_of_day_index)) %>%
filter(passengers >= 200, all_avg_wait>0, booth_rate <= 500)
datas %>%
group_by(wday) %>%
ggplot(aes(x = wday, y = booth_rate, color = wday)) +
geom_boxplot() +
facet_wrap(~time_of_day)
datas
datas = datas %>%
ungroup() %>%
mutate(booth_rate = passengers * 60 / all_avg_wait / booths) %>%
mutate(
time_of_day = case_when(
hour == "0100 - 0200" | hour == '0200 - 0300' | hour == '0300 - 0400' | hour == "0400 - 0500" ~ 'overnight',
hour == '0500 - 0600' | hour == '0600 - 0700' | hour == '0700 - 0800'  ~ 'early morning',
hour == '0800 - 0900' | hour == '0900 - 1000' | hour == '1000 - 1100' | hour == '1100 - 1200' ~ 'noon',
hour == '1200 - 1300' | hour == '1300 - 1400' | hour == '1400 - 1500' | hour == '1500 - 1600' | hour == '1600 - 1700' ~ 'afternoon',
hour == '1700 - 1800' | hour == '1800 - 1900' | hour == '1900 - 2000'  ~ 'early evening',
hour == '2000 - 2100' | hour == '2100 - 2200' | hour == '2200 - 2300' | hour == '2300 - 0000' | hour == '0000 - 0100' ~ 'late evening',
TRUE                       ~ "other"
)) %>%
mutate(time_of_day_index = case_when(
time_of_day == 'overnight' ~ 1,
time_of_day == 'early morning' ~ 2,
time_of_day == 'noon' ~ 3,
time_of_day == 'afternoon' ~ 4,
time_of_day == 'early evening' ~ 5,
time_of_day == 'late evening' ~ 6,
)) %>%
mutate( time_of_day = reorder(time_of_day, time_of_day_index)) %>%
filter(passengers >= 200, all_avg_wait>0, booth_rate <= 500)
datas %>%
group_by(wday) %>%
ggplot(aes(x = wday, y = booth_rate, color = wday)) +
geom_boxplot() +
facet_wrap(~time_of_day)
datas
tol = datas %>%
group_by(year, month) %>%
summarize(passengers = sum(passengers))
ggplot(tol, aes(x = month, y = passengers, fill = year)) +
geom_col() +
scale_y_continuous(labels = label_comma()) +
xlab("Month") +
ylab("Number of international arrivals") +
ggtitle("Monthly International Arrivals", subtitle = "2016 - 2020") +
guides(fill = guide_legend(title = "Year", title.position = "left")) +
theme(legend.position="bottom")
tol = datas %>%
group_by(year, month) %>%
summarize(passengers = sum(passengers))
ggplot(tol, aes(x = month, y = passengers, fill = year)) +
geom_col(position="dodge2") +
scale_y_continuous(labels = label_comma()) +
xlab("Month") +
ylab("Number of international arrivals") +
ggtitle("Monthly International Arrivals", subtitle = "2016 - 2020") +
guides(fill = guide_legend(title = "Year", title.position = "left")) +
theme(legend.position="bottom")
